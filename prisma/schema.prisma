// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model  BusinessOwner{
   id String @id @default(uuid())
   email String @unique
   firstName String?
   lastName String?
   pin String?
   is_pin_enabled Boolean @default(false)
   password String
   phone String?
   accountNo String?
   dateOfBirth String?
   nationality String?
   occupation String?
   street String?
   city String?
   state String?
   postalCode String?
   wallet Wallet?
   avatar String?
client  Client[]
  transaction Transaction[]
invoice Invoice[]
verify_otp Boolean @default(false)
                otp_trial String @unique
                otp_secret String
                otp String?  @unique
                KYC Boolean @default(false)

                business BusinessProfile[]
                withdrawal Withdrawal[]
                businessTransactions  BusinessTransactions[]
   
}

model BusinessProfile{
   id String @id @default(uuid())
businessName String?
businessReg String?
address String?
country String?
city String?
state String?
postalCode String?
accountNo String?
recipientBankId String?
bankCode String?
  owner BusinessOwner @relation(fields: [owner_id], references: [id])
  owner_id  String @unique
}


model Wallet{
   id String @id @default(uuid())
   balance Float @default(0)
  holder BusinessOwner@relation(fields: [holder_id], references: [id])
  holder_id  String @unique
 
}


model Client{
  id String @id @default(uuid())
  email String @unique
 name String
  avatar String? 
  phone String?
  country String?
  city String?
  address String?
  state String?
  businessOwner  BusinessOwner ? @relation(fields: [businessOwner_id], references: [id])
  businessOwner_id  String? 
  transaction Transaction[]
  invoice Invoice[]
}

model BusinessTransactions{
  id String @id @default(uuid())
  amount Float?
  type String?
  date String?
  status String?
  ref String ? @unique
  name String
  businessOwner BusinessOwner  @relation(fields: [businessOwner_id], references: [id])
  businessOwner_id String
}

model Transaction{
  id String @id @default(uuid())
  amount Float?
  type String?
  date String?
  status String?
  ref String ? @unique
  client Client @relation(fields: [client_id], references: [id])
  client_id String
  businessOwner BusinessOwner  @relation(fields: [businessOwner_id], references: [id])
  businessOwner_id String
  invoice Invoice?  @relation(fields: [invoice_id], references: [id])
  invoice_id String ? @unique

}

model Withdrawal{
   id String @id @default(uuid())
   refernece String? @unique
   status String?
   amount Float?
   date String?
   bank String?
    businessOwner BusinessOwner  @relation(fields: [businessOwner_id], references: [id])
  businessOwner_id String

}

model Invoice{
  id String @id @default(uuid())
  amountPaid Float?
  date String?
  status String?
  name String?
  phone String?
  email String?
  address String?
  subTotal String?
  discount String?
  tax String?
dateDue String?
  client Client ? @relation(fields: [client_id], references: [id])
  client_id String ?
  businessOwner BusinessOwner?  @relation(fields: [businessOwner_id], references: [id])
  businessOwner_id String ?
  transaction_id Transaction?
  items Json?
  paymentLink String?
  
}